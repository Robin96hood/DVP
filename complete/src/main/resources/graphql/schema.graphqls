type Query {
    getTicketById(id:ID):Ticket
    getAllTickets:[Ticket!]!
}

type Mutation {
    addTicket(ticketDTO: TicketDTO): Ticket!
    deleteTicket(id: ID) : Boolean
    updateTicket(estado: String, id: ID):Ticket
}

input TicketDTO {
    usuario: UsuarioDTO
    fechaCreacion: String
    fechaActualizacion: String
    estado: String
}

input UsuarioDTO {
    id: ID
}

type Ticket {
    id: ID
    usuario: Usuario
    fechaCreacion: String
    fechaActualizacion: String
    estado: String
}

type Usuario {
    id: ID
    login: String
    nodeId: String
    avatarUrl: String
    gravatarId: String
    url: String
    htmlUrl: String
    followersUrl: String
    followingUrl: String
    subscriptionsUrl: String
    organizationsUrl: String
    gistsUrl: String
    starredUrl: String
    reposUrl: String
    eventsUrl: String
    receivedEventsUrl: String
    type: String
    siteAdmin: Boolean
    score: Int
}

